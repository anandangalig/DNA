<?php
//========================UNIT TESTING====================================

  class DNAUnitTests extends DrupalUnitTestCase
  {
    public static function getInfo()
    {
      return array(
        'name' => 'DNA Unit Test',
        'description' => 'Tests generate_other_half function of the DNA module.',
        'group' => 'Independent Project Tests',
      );
    }

     public function testGenerateOtherHalf()
     {
       //ARRANGE:
       $results_message = 'It works for 1 letter!';
       $input= 'a';
       //ACT:
       $full_helix = generate_other_half($input);
       //ASSERT:
       $expected_result = 'A-T';
       $this->assertEqual($full_helix, $expected_result, $results_message);

       //ARRANGE:
       $results_message = 'It works for 1 letter in reverse!';
       $input= 't';
       //ACT:
       $full_helix = generate_other_half($input);
       //ASSERT:
       $expected_result = 'T-A';
       $this->assertEqual($full_helix, $expected_result, $results_message);

       //ARRANGE:
       $results_message = 'It works for 2 letters!';
       $input= 'tc';
       //ACT:
       $full_helix = generate_other_half($input);
       //ASSERT:
       $expected_result = 'T-A, C-G';
       $this->assertEqual($full_helix, $expected_result, $results_message);

       //ARRANGE:
       $results_message = 'It works for 2 letters in reverse!';
       $input= 'ag';
       //ACT:
       $full_helix = generate_other_half($input);
       //ASSERT:
       $expected_result = 'A-T, G-C';
       $this->assertEqual($full_helix, $expected_result, $results_message);
     }
  }

//========================FUNCTIONAL TESTING====================================

  class DNAFunctionalTests extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNA Functional Test',
            'description' => 'Front end functional test for custom module DNA.',
            'group' => 'Independent Project Tests',
        );
    }

    public function setUp() {
        parent::setUp(array('dna')); //this enables the created module
        // $this->createTestingPage($input);
    }


    public function createTestingPage($input) {
        //$info = the information needed to create the basic page at the url `pagetest`.
        $info = array();
        $info['input'] = $input;//hard coded input - changed it to a parameter, for different tests needed different inputs.
        $this->drupalPost('/dna', $info, t('Sequence'));//going to the URL, input above, trigger button Sequence.
    }

    public function testResultsSuccessPageTest() {
      $this->createTestingPage('a,t,c,g');
      $this->assertText('A-T, T-A, C-G, G-C', 'The text on the page is correct.');
    }
    public function testNoInputErrorPageTest() {
      $this->createTestingPage('');
      $this->assertText('Input Your side of the DNA Double Helix: field is required.', 'Element Validation: Input Required is working properly.');
    }
    public function testValidationErrorPageTest() {
      $this->createTestingPage('a,t,c,L');
      // $this->drupalGet('/dna'); //did not need it since the function routes to results page itself.
      $this->assertText('DNA has only 4 acceptable nucleotides: A, T, C, and G.', 'Element Validation for 4 correct letters is working properly.');
    }

  }
